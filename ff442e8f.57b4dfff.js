(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{133:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return s}));var a=t(3),r=t(7),i=(t(0),t(137)),o={title:"API",slug:"/graphql/api"},p={unversionedId:"06_GraphQL/2_API",id:"06_GraphQL/2_API",isDocsHomePage:!1,title:"API",description:"The Symfony Boilerplate uses GraphQLite to quickly build a GraphQL API based",source:"@site/docs/06_GraphQL/2_API.md",slug:"/graphql/api",permalink:"/symfony-boilerplate/docs/graphql/api",editUrl:"https://github.com/thecodingmachine/symfony-boilerplate/tree/master/docs/docs/06_GraphQL/2_API.md",version:"current",sidebar:"docs",previous:{title:"Overview",permalink:"/symfony-boilerplate/docs/graphql"},next:{title:"Web Application",permalink:"/symfony-boilerplate/docs/graphql/web-application"}},l=[{value:"Queries",id:"queries",children:[]},{value:"Mutations",id:"mutations",children:[]},{value:"Models",id:"models",children:[]},{value:"Enums",id:"enums",children:[]}],c={toc:l};function s(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Symfony Boilerplate uses ",Object(i.b)("a",{parentName:"p",href:"https://graphqlite.thecodingmachine.io/"},"GraphQLite")," to quickly build a GraphQL API based\non your models and use cases."),Object(i.b)("p",null,"As the documentation of this PHP library covers a lot of aspects, consider reading it to have a better understanding\nof its functionalities."),Object(i.b)("h2",{id:"queries"},"Queries"),Object(i.b)("p",null,"A GraphQL query is like a REST ",Object(i.b)("inlineCode",{parentName:"p"},"GET")," request."),Object(i.b)("p",null,"Thanks to the ",Object(i.b)("inlineCode",{parentName:"p"},"@Query")," annotation, you may transform any method in the ",Object(i.b)("inlineCode",{parentName:"p"},"App\\UseCase")," namespace into a valid GraphQL\nendpoint."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php",metastring:'title="App\\UseCase\\HelloWorld.php"',title:'"App\\UseCase\\HelloWorld.php"'},'use TheCodingMachine\\GraphQLite\\Annotations\\Query;\n\n/**\n * @Query\n */\npublic function helloWorld(): string \n{\n    return "Hello world";\n}\n')),Object(i.b)("p",null,"Of course, this is a simple example. More complex examples are available in the source code of the application and in\nthe next chapters."),Object(i.b)("h2",{id:"mutations"},"Mutations"),Object(i.b)("p",null,"A GraphQL mutation is like a REST ",Object(i.b)("inlineCode",{parentName:"p"},"POST")," request."),Object(i.b)("p",null,"Thanks to the ",Object(i.b)("inlineCode",{parentName:"p"},"@Mutation")," annotation, you may transform any method in the ",Object(i.b)("inlineCode",{parentName:"p"},"App\\UseCase")," namespace into a valid GraphQL\nendpoint."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php",metastring:'title="App\\UseCase\\CreateFoo.php"',title:'"App\\UseCase\\CreateFoo.php"'},"use TheCodingMachine\\GraphQLite\\Annotations\\Mutation;\n\n/**\n * @Mutation\n */\npublic function createFoo(string $bar): Foo \n{\n    $foo = new Foo($bar);\n    $this->fooDao->save($foo);\n    \n    return $foo;\n}\n")),Object(i.b)("p",null,"Of course, this is a simple example. More complex examples are available in the source code of the application and in\nthe next chapters."),Object(i.b)("h2",{id:"models"},"Models"),Object(i.b)("p",null,"Thanks to ",Object(i.b)("inlineCode",{parentName:"p"},"@Type")," and ",Object(i.b)("inlineCode",{parentName:"p"},"@SourceField")," annotations, you may convert any PHP class in the ",Object(i.b)("inlineCode",{parentName:"p"},"App\\Domain\\Model")," namespace to\na valid GraphQL type:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php",metastring:'title="src/api/src/Domain/Model/User.php"',title:'"src/api/src/Domain/Model/User.php"'},'use TheCodingMachine\\GraphQLite\\Annotations\\SourceField;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Type;\n\n/**\n * @Type\n * @SourceField(name="id", outputType="ID")\n * @SourceField(name="firstName")\n * @SourceField(name="lastName")\n * @SourceField(name="email")\n * @SourceField(name="locale")\n * @SourceField(name="profilePicture")\n * @SourceField(name="role")\n * @SourceField(name="activated")\n */\nclass User extends BaseUser {}\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"@SourceField")," annotation will look for methods named ",Object(i.b)("inlineCode",{parentName:"p"},"{name}()"),", ",Object(i.b)("inlineCode",{parentName:"p"},"is{Name}()")," and ",Object(i.b)("inlineCode",{parentName:"p"},"get{Name}()")," across the current\nclass or the parents classes."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","Identifiers should have the ",Object(i.b)("inlineCode",{parentName:"p"},'outputType="ID"')," parameter."))),Object(i.b)("p",null,"To allow ",Object(i.b)("a",{parentName:"p",href:"https://graphqlite.thecodingmachine.io/"},"GraphQLite")," to automatically inject an instance of\n",Object(i.b)("inlineCode",{parentName:"p"},"User")," in a query or mutation, i.e:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"/**\n * @Mutation\n */\npublic function updateUser(User $user, string $firstName, string $lastName): User {}\n")),Object(i.b)("p",null,"You have to create a ",Object(i.b)("a",{parentName:"p",href:"https://graphqlite.thecodingmachine.io/"},"GraphQLite")," factory in the DAO:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php",metastring:'title="src/api/src/Domain/Dao/UserDao.php"',title:'"src/api/src/Domain/Dao/UserDao.php"'},'use TheCodingMachine\\GraphQLite\\Annotations\\Factory;\nuse TheCodingMachine\\GraphQLite\\Annotations\\HideParameter;\n\n/**\n * @Factory\n * @HideParameter(for="$lazyLoading")\n */\npublic function getById(string $id, bool $lazyLoading = false): User\n{\n    return parent::getById($id, $lazyLoading);\n}\n')),Object(i.b)("p",null,"In your GraphQL client, you may now call this mutation by using the ",Object(i.b)("inlineCode",{parentName:"p"},"id")," parameter of the factory:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:'language-title="GraphQL"'},"mutation updateUser(\n    $id: String!\n    $firstName: String!\n    $lastName: String!\n) {\n    updateUser(\n        user: { id: $id }\n        firstName: $firstName\n        lastName: $lastName\n    ) {\n        id\n        firstName\n        lastName\n    }\n}\n")),Object(i.b)("h2",{id:"enums"},"Enums"),Object(i.b)("p",null,"Classes from the namespace ",Object(i.b)("inlineCode",{parentName:"p"},"App\\Domain\\Enum")," which extends ",Object(i.b)("inlineCode",{parentName:"p"},"MyCLabs\\Enum\\Enum")," are automatically converted to valid\nGraphQL types."),Object(i.b)("p",null,"For instance:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php",metastring:'title="src/api/src/Domain/Enum/Role.php"',title:'"src/api/src/Domain/Enum/Role.php"'},"use MyCLabs\\Enum\\Enum;\n\n/**\n * @method static Role ADMINISTRATOR()\n * @method static Role USER()\n */\nfinal class Role extends Enum\n{\n    private const ADMINISTRATOR = 'ADMINISTRATOR';\n    private const USER          = 'USER';\n}  \n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"/**\n * @Mutation \n */\npublic function updateUserRole(User $user, Role $role): User {}\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:'language-title="GraphQL"'},'mutation updateUserRole(\n    $id: String!\n    $role: Role! # "ADMINISTRATOR" or "USER"\n) {\n    updateUserRole(\n        user: { id: $id }\n        role: $role\n    ) {\n        id\n        role\n    }\n}\n')))}s.isMDXComponent=!0},137:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),s=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=s(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),d=a,b=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return t?r.a.createElement(b,p(p({ref:n},c),{},{components:t})):r.a.createElement(b,p({ref:n},c))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);