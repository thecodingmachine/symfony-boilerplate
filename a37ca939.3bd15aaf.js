(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),r=(n(0),n(137)),i={title:"Access Control",slug:"/security/access-control"},c={unversionedId:"08_Security/3_Access Control",id:"08_Security/3_Access Control",isDocsHomePage:!1,title:"Access Control",description:"Authorization Levels",source:"@site/docs/08_Security/3_Access Control.md",slug:"/security/access-control",permalink:"/symfony-boilerplate/docs/security/access-control",editUrl:"https://github.com/thecodingmachine/symfony-boilerplate/tree/master/docs/docs/08_Security/3_Access Control.md",version:"current",sidebar:"docs",previous:{title:"Authentication",permalink:"/symfony-boilerplate/docs/security/authentication"},next:{title:"CORS",permalink:"/symfony-boilerplate/docs/security/CORS"}},s=[{value:"Authorization Levels",id:"authorization-levels",children:[{value:"API",id:"api",children:[]},{value:"Web Application",id:"web-application",children:[]}]},{value:"Access Control",id:"access-control",children:[{value:"Symfony Routes&#39; Annotations",id:"symfony-routes-annotations",children:[]},{value:"GraphQLite Annotations",id:"graphqlite-annotations",children:[]},{value:"Symfony&#39;s Voters",id:"symfonys-voters",children:[]},{value:"GraphQL Fields",id:"graphql-fields",children:[]},{value:"Web Application",id:"web-application-1",children:[]}]}],l={toc:s};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"authorization-levels"},"Authorization Levels"),Object(r.b)("h3",{id:"api"},"API"),Object(r.b)("p",null,"In Symfony, roles (i.e., ",Object(r.b)("inlineCode",{parentName:"p"},"ROLE_FOO"),") represent authorization levels."),Object(r.b)("p",null,"In the boilerplate, we defined two hierarchical roles: administrator and user.\nHierarchical means that:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The administrator is the top-level permission: it has its access level and user's access levels."),Object(r.b)("li",{parentName:"ol"},"A user has only its access level.")),Object(r.b)("p",null,"In other words, if you limit the access to a resource to users with the administrator authorization level,\nadministrator users can access it too but not the user."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml",metastring:'title="src/api/config/packages/security.yaml"',title:'"src/api/config/packages/security.yaml"'},"role_hierarchy:\n    ROLE_ADMINISTATOR: ROLE_USER\n")),Object(r.b)("p",null,"As explained in the previous chapter, we implemented the ",Object(r.b)("inlineCode",{parentName:"p"},"getRoles")," method from the ",Object(r.b)("inlineCode",{parentName:"p"},"UserInterface"),".\nThis method has to return an array of string. "),Object(r.b)("p",null,"However, our users have only one authorization level attached to them (thanks to the hierarchy).\nThat's why we always return an array of one element:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php",metastring:'title="src/api/src/Domain/Model/User.php"',title:'"src/api/src/Domain/Model/User.php"'},"public function getRoles(): array\n{\n    return [\n        'ROLE_' . $this->getRole(),\n    ];\n}\n")),Object(r.b)("p",null,"Moreover, we create the ",Object(r.b)("inlineCode",{parentName:"p"},"Role")," enumerator, which lists our users'",Object(r.b)("inlineCode",{parentName:"p"},"role")," property's available values:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php",metastring:'title="src/api/src/Domain/Enum/Role.php"',title:'"src/api/src/Domain/Enum/Role.php"'},"use MyCLabs\\Enum\\Enum;\n\n/**\n * @method static Role ADMINISTRATOR()\n * @method static Role USER()\n */\nfinal class Role extends Enum\n{\n    private const ADMINISTRATOR = 'ADMINISTRATOR';\n    private const USER          = 'USER';\n}\n")),Object(r.b)("p",null,"These values don't have the prefix ",Object(r.b)("inlineCode",{parentName:"p"},"ROLE_")," because\nwe don't want to store Symfony specific information in the ",Object(r.b)("inlineCode",{parentName:"p"},"users")," table. "),Object(r.b)("p",null,"Yet, this prefix is mandatory because otherwise, Symfony will not recognize the permission."),Object(r.b)("p",null,"That's why we prefix the role whenever we interact with Symfony in our code:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"@Security(\"is_granted('ROLE_ADMINISTRATOR')\")\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"$this->security->isGranted(Role::getSymfonyRole(Role::ADMINISTRATOR()));\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","A user ",Object(r.b)("strong",{parentName:"p"},"must have one authorization level"),"; otherwise authentication won't work."))),Object(r.b)("h3",{id:"web-application"},"Web Application"),Object(r.b)("p",null,"The file ",Object(r.b)("em",{parentName:"p"},"src/webapp/store/auth/getters.js")," from the ",Object(r.b)("inlineCode",{parentName:"p"},"auth")," store mimics the role hierarchy from Symfony:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title="src/webapp/store/auth/getters.js"',title:'"src/webapp/store/auth/getters.js"'},"import { ADMINISTRATOR, USER } from '@/enums/roles'\n\nfunction level(role) {\n  switch (role) {\n    case ADMINISTRATOR:\n      return 2\n    case USER:\n      return 1\n    default:\n      return 0\n  }\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title="src/webapp/enums/roles.js"',title:'"src/webapp/enums/roles.js"'},"export const ADMINISTRATOR = 'ADMINISTRATOR'\nexport const USER = 'USER'\n")),Object(r.b)("h2",{id:"access-control"},"Access Control"),Object(r.b)("p",null,"Access control in the API is about defining what kind of users (anonymous, authenticated, administrator, etc.)\nmay call (or not) an HTTP entry point."),Object(r.b)("p",null,"In the API, there are three sorts :"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Symfony's routes."),Object(r.b)("li",{parentName:"ol"},"GraphQL mutations/queries."),Object(r.b)("li",{parentName:"ol"},"The GraphQL fields.")),Object(r.b)("h3",{id:"symfony-routes-annotations"},"Symfony Routes' Annotations"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Restrict to authenticated users:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},'use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/**\n * @Route("/download/foo", methods={"GET"})\n * @Security("is_granted(\'IS_AUTHENTICATED_FULLY\')")\n */\npublic function downloadFoo(Request $request): Response\n')),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Restrict to authenticated users with a specific role:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},'use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/**\n * @Route("/download/foo", methods={"GET"})\n * @Security("is_granted(\'ROLE_ADMINISTRATOR\')")\n */\npublic function downloadFoo(Request $request): Response\n')),Object(r.b)("p",null,"See the ",Object(r.b)("a",{parentName:"p",href:"https://symfony.com/doc/current/security.html"},"security")," and\n",Object(r.b)("a",{parentName:"p",href:"https://symfony.com/doc/current/bundles/SensioFrameworkExtraBundle/annotations/security.html"},"annotations")," documentations\nfrom Symfony for more details."),Object(r.b)("h3",{id:"graphqlite-annotations"},"GraphQLite Annotations"),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://graphqlite.thecodingmachine.io/"},"GraphQLite")," provides many Symfony like annotations,\n",Object(r.b)("strong",{parentName:"p"},"even if they differ slightly on some occasions"),". The import statements are also different."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Restrict to authenticated users:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\GraphQLite\\Annotations\\Logged;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Mutation;\n\n/**\n * @Mutation\n * @Logged\n */\npublic function updateFoo(\n    string $foo\n))\n")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Inject the authenticated user:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},'use TheCodingMachine\\GraphQLite\\Annotations\\InjectUser;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Logged;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Mutation;\n\n/**\n * @Mutation\n * @Logged\n * @InjectUser(for="$user")\n */\npublic function updateFoo(\n    User $user,\n    string $foo\n)\n')),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Restrict to authenticated users with a specific role:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\GraphQLite\\Annotations\\Logged;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Mutation;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Security;\n\n/**\n * @Mutation\n * @Logged\n * @Security(\"is_granted('ROLE_ADMINISTRATOR')\")\n */\npublic function updateFoo(\n    string $foo\n)\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","Contrary to Symfony's routes, always put the ",Object(r.b)("inlineCode",{parentName:"p"},"@Logged")," annotation before the ",Object(r.b)("inlineCode",{parentName:"p"},"@Security")," and ",Object(r.b)("inlineCode",{parentName:"p"},"@InjectUser")," annotations\non your GraphQL entry points. The web application needs to know the difference between unauthenticated (",Object(r.b)("inlineCode",{parentName:"p"},"401"),")\nand access denied (",Object(r.b)("inlineCode",{parentName:"p"},"403"),")!"))),Object(r.b)("p",null,"See ",Object(r.b)("a",{parentName:"p",href:"https://graphqlite.thecodingmachine.io/docs/fine-grained-security"},"GraphQLite documentation")," for more details."),Object(r.b)("h3",{id:"symfonys-voters"},"Symfony's Voters"),Object(r.b)("p",null,"Sometimes it is not enough to restrict access to authenticated users/users with a specific role.\nFor instance, when a resource is only accessible to the user owning it."),Object(r.b)("p",null,"That's when Symfony's voters come in handy!"),Object(r.b)("p",null,"It comes in two parts:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The PHP class which is specifying the voter's rules."),Object(r.b)("li",{parentName:"ol"},"The annotation we put on GraphQL mutations/queries and Symfony's routes.")),Object(r.b)("h4",{id:"graphql"},"GraphQL"),Object(r.b)("p",null,"For instance, let's examine the following scenario: an administrator can delete a user, but cannot delete himself:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php",metastring:'title="src/api/src/UseCase/Product/UpdateProduct.php"',title:'"src/api/src/UseCase/Product/UpdateProduct.php"'},"use TheCodingMachine\\GraphQLite\\Annotations\\Logged;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Mutation;\nuse TheCodingMachine\\GraphQLite\\Annotations\\Security;\n\n/**\n * @Mutation\n * @Logged\n * @Security(\"is_granted('DELETE_USER', user1)\")\n */\npublic function deleteUser(User $user1): bool\n")),Object(r.b)("p",null,"A voter annotation has two arguments:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The attribute: in our application, it's equivalent to an action, i.e., ",Object(r.b)("inlineCode",{parentName:"li"},"DELETE_USER"),", ",Object(r.b)("inlineCode",{parentName:"li"},"GET_USER"),", etc."),Object(r.b)("li",{parentName:"ol"},"The subject: mostly the model on which we want to check ownership.")),Object(r.b)("p",null,"Here the annotation asks for a voter that may handle the ",Object(r.b)("inlineCode",{parentName:"p"},"DELETE_USER")," attribute for the ",Object(r.b)("inlineCode",{parentName:"p"},"user1")," subject."),Object(r.b)("p",null,"By convention, we've created a voter PHP class per subject. In that case, as the subject is a ",Object(r.b)("inlineCode",{parentName:"p"},"Uver"),", we've made the\n",Object(r.b)("inlineCode",{parentName:"p"},"UserVoter")," class."),Object(r.b)("p",null,"Each voters' PHP class consist of three parts:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"The attributes constants."),Object(r.b)("li",{parentName:"ol"},"The method ",Object(r.b)("inlineCode",{parentName:"li"},"supports"),": it returns ",Object(r.b)("inlineCode",{parentName:"li"},"true")," if the voter supports both the given attribute and subject."),Object(r.b)("li",{parentName:"ol"},"The method ",Object(r.b)("inlineCode",{parentName:"li"},"voteOnAttribute"),": only called if the ",Object(r.b)("inlineCode",{parentName:"li"},"supports")," method returned ",Object(r.b)("inlineCode",{parentName:"li"},"true"),". It contains your custom logic\nfor validating (or not) the access.")),Object(r.b)("p",null,"Take a closer look at those methods from ",Object(r.b)("inlineCode",{parentName:"p"},"UserVoter")," for a better understanding."),Object(r.b)("h4",{id:"rest"},"REST"),Object(r.b)("p",null,"In your Symfony's routes, you may not have access to a model directly but an ",Object(r.b)("inlineCode",{parentName:"p"},"id")," instead:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},'use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/**\n * @Route("/orders/{id}/invoice", methods={"GET"})\n * @Security("is_granted(\'DOWNLOAD_ORDER_INVOICE\', id)")\n */\npublic function downloadInvoice(string $id): Response;\n')),Object(r.b)("p",null,"In your Symfony's Voter, you have to check if the subject is either a model or a string:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-php"},"/**\n * @param mixed $subject\n */\nprotected function voteOnAttribute(string $attribute, $subject, TokenInterface $token): bool\n{\n    // Some logic here...\n\n    if ($subject instanceof Order) {\n        $order = $subject;\n    } else {\n        $order = $this->orderDao->getById($subject);\n    }\n\n    // Some logic here...\n}\n")),Object(r.b)("h3",{id:"graphql-fields"},"GraphQL Fields"),Object(r.b)("p",null,"Usually, you define your GraphQL types' fields in your migrations or your ",Object(r.b)("inlineCode",{parentName:"p"},"Model"),"'s getters in the getters of your\nwhen overriding a base ",Object(r.b)("inlineCode",{parentName:"p"},"Model"),"'s getter. That's when you must decide if you want to expose or not the field\nto your GraphQL clients."),Object(r.b)("p",null,"Also, as you are developing both the clients and the API, securing the entry points should be enough. If that's not the\ncase, you can add the same ",Object(r.b)("inlineCode",{parentName:"p"},"@Security")," annotations to your getters as the ones from the mutations/queries."),Object(r.b)("h3",{id:"web-application-1"},"Web Application"),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"src/webapp/layouts/error.vue")," layout handles almost every error."),Object(r.b)("p",null,"You can propagate a GraphQL error via ",Object(r.b)("inlineCode",{parentName:"p"},"context.error(e)")," in the ",Object(r.b)("inlineCode",{parentName:"p"},"asyncData")," component's attribute or ",Object(r.b)("inlineCode",{parentName:"p"},"this.$nuxt.error(e)"),"\nin your component's methods (except mixins, where you have to throw it):"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title="Vue component <script> block"',title:'"Vue',component:!0,"<script>":!0,'block"':!0},"import { MustBeLoggedAndAdministratorQuery } from '@/graphql/examples/must_be_logged_and_administrator.query'\n\nexport default {\n  // Server-side call.\n  async asyncData(context) {\n    try {\n      const result = await context.app.$graphql.request(MustBeLoggedAndAdministratorQuery)\n    } catch (e) {\n      context.error(e)\n    }\n  },\n  methods: {\n    // Browser call.\n    async doAction() {\n      try {\n        const result = await this.$graphql.request(MustBeLoggedAndAdministratorQuery)\n      } catch (e) {\n        this.$nuxt.error(e)\n      }\n    },\n  },\n}\n")),Object(r.b)("p",null,"In the error layout, we check if:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"401")," status code: the user has no session in the API. Therefore, we call the ",Object(r.b)("inlineCode",{parentName:"li"},"resetUser")," mutation and redirect the\nuser to the login page. On success, the web application redirects the user to the current page thanks to the ",Object(r.b)("inlineCode",{parentName:"li"},"redirect"),"\nquery parameter. "),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"404"),", ",Object(r.b)("inlineCode",{parentName:"li"},"403"),", or anything else: we display an error page.")),Object(r.b)("p",null,"Some pages are also not available for the authenticated user (for instance, the login page).\nYou may use the ",Object(r.b)("em",{parentName:"p"},"src/webapp/middleware/redirect-if-authenticated.js")," middleware to redirect the user to the home page:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title="Vue component <script> block"',title:'"Vue',component:!0,"<script>":!0,'block"':!0},"export default {\n  middleware: ['redirect-if-authenticated'],\n}\n")),Object(r.b)("p",null,"If a page requires to be authenticated but does not query protected GraphQL entry points / Symfony routes, you may also\nuse the ",Object(r.b)("em",{parentName:"p"},"src/webapp/middleware/redirect-if-not- authenticated.js")," middleware to redirect the user to the home page:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js",metastring:'title="Vue component <script> block"',title:'"Vue',component:!0,"<script>":!0,'block"':!0},"export default {\n  middleware: ['redirect-if-not-authenticated'],\n}\n")))}p.isMDXComponent=!0},137:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,h=u["".concat(i,".").concat(d)]||u[d]||b[d]||r;return n?o.a.createElement(h,c(c({ref:t},l),{},{components:n})):o.a.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<r;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);