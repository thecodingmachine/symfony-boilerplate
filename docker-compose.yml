#version: "3"
services:

  back:
    image: ${BACK_IMAGE_NAME}:${DEPLOYMENT_TAG}
    restart:  on-failure
    labels:
      - traefik.enable=true
      - traefik.http.routers.back_router.rule=${BACK_ROUTER_RULE}
      - traefik.http.routers.back_router.service=back_service
      - traefik.http.services.back_service.loadbalancer.server.port=80
    environment:
      DATABASE_URL: "mysql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@mysql:3306/${DATABASE_NAME}?serverVersion=11.1.2-MariaDB"
      TESTS_DATABASE_URL: "mysql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@mysql_tests:3306/${DATABASE_NAME}?serverVersion=11.1.2-MariaDB"
      APP_SSO_SERVICEPROVIDER_X509CERT: ${APP_SSO_SERVICEPROVIDER_X509CERT}
      APP_SSO_SERVICEPROVIDER_PRIVATEKEY: ${APP_SSO_SERVICEPROVIDER_PRIVATEKEY}
      APP_SSO_IDENTITYPROVIDER_X509CERT: ${APP_SSO_IDENTITYPROVIDER_X509CERT}
      APP_SSO_IDENTITYPROVIDER_ENTITYID: ${APP_SSO_IDENTITYPROVIDER_ENTITYID}
      APP_SSO_IDENTITYPROVIDER_LOGINURL: ${APP_SSO_IDENTITYPROVIDER_LOGINURL}
      APP_SSO_IDENTITYPROVIDER_LOGOUTURL: ${APP_SSO_IDENTITYPROVIDER_LOGOUTURL}
      APP_URL: ${PROTOCOL}://${BASE_DOMAIN}
      API_PREFIX: ${API_PREFIX}
      MAILER_DSN: ${MAILER_DSN}
      MAIL_HOST: ${MAIL_HOST}
      APP_SECRET: "secretforapp"
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      STORAGE_S3_KEY: ${STORAGE_S3_KEY}
      STORAGE_S3_SECRET: ${STORAGE_S3_SECRET}
      STORAGE_PUBLIC_SOURCE: ${STORAGE_PUBLIC_SOURCE}
      STORAGE_PRIVATE_SOURCE: ${STORAGE_PRIVATE_SOURCE}
      STORAGE_PUBLIC_BUCKET_NAME: ${STORAGE_PUBLIC_BUCKET_NAME}
      STORAGE_PRIVATE_BUCKET_NAME: ${STORAGE_PRIVATE_BUCKET_NAME}
   #   APP_URL_WEBAPP: "${PROTOCOL}://${DOMAIN}"

  mysql:
    image: 'mariadb:11.1'
    restart:  on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql_db:/var/lib/mysql

  front:
    image: ${FRONT_IMAGE_NAME}:${DEPLOYMENT_TAG}
    user: "node"
    labels:
      - traefik.enable=true
      - traefik.http.routers.front_router.rule=${FRONT_ROUTER_RULE}
      - traefik.http.routers.front_router.service=front_service
      - traefik.http.services.front_service.loadbalancer.server.port=3000
    working_dir: /home/node/app
    environment:
      # This is used only per the proxy
      NUXT_API_URL: "${PROTOCOL}://${API_DOMAIN}/"
      PUBLIC_STORAGE_URL: "${PROTOCOL}://${MINIO_DOMAIN}/${STORAGE_PUBLIC_BUCKET_NAME}/"
  proxy:
    image: traefik:3.0
    container_name: tcm_proxy
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
    labels:
      - traefik.enable=false
    ports:
      - "80:80"
    restart:  on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
        aliases:
          - "${API_DOMAIN}"
          - "${BASE_DOMAIN}"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio_console_router.rule=${MINIO_CONSOLE_ROUTER_RULE}
      - traefik.http.routers.minio_console_router.service=minio_console_service
      - traefik.http.services.minio_console_service.loadbalancer.server.port=9001
      - traefik.http.routers.minio_s3_router.rule=${MINIO_ROUTER_RULE}
      - traefik.http.routers.minio_s3_router.service=minio_s3_service
      - traefik.http.services.minio_s3_service.loadbalancer.server.port=9000
    environment:
      MINIO_ROOT_USER: ${STORAGE_S3_KEY}
      MINIO_ROOT_PASSWORD: ${STORAGE_S3_SECRET}
    volumes:
      - minio_data:/data

volumes:
  mysql_db:
  minio_data:
networks:
  # This could be very usefull to run multiple project on the same machine
  tcm_network:
    name: tcm_network
  default:
    name: tcm_network