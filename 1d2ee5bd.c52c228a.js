(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{137:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),p=function(e){var t=o.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,u=b["".concat(r,".").concat(d)]||b[d]||m[d]||i;return n?o.a.createElement(u,l(l({ref:t},c),{},{components:n})):o.a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},179:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/uploaded_file_big_picture-0276500d900d832c655437ef332f85cf.png"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),i=(n(0),n(137)),r={title:"Uploads",slug:"/files/uploads"},l={unversionedId:"09_Files/3_Uploads",id:"09_Files/3_Uploads",isDocsHomePage:!1,title:"Uploads",description:"Uploaded files overview",source:"@site/docs/09_Files/3_Uploads.md",slug:"/files/uploads",permalink:"/symfony-boilerplate/docs/files/uploads",editUrl:"https://github.com/thecodingmachine/symfony-boilerplate/tree/master/docs/docs/09_Files/3_Uploads.md",version:"current",sidebar:"docs",previous:{title:"Temporary Files",permalink:"/symfony-boilerplate/docs/files/temporary-files"},next:{title:"Overview",permalink:"/symfony-boilerplate/docs/validation"}},s=[{value:"Storables",id:"storables",children:[]},{value:"Storages",id:"storages",children:[{value:"Write",id:"write",children:[]},{value:"Delete",id:"delete",children:[]},{value:"File Exists",id:"file-exists",children:[]},{value:"Get File Content",id:"get-file-content",children:[]}]},{value:"Public File Access",id:"public-file-access",children:[]},{value:"Private File Access",id:"private-file-access",children:[]},{value:"Storage Source",id:"storage-source",children:[]},{value:"Forms",id:"forms",children:[]}],c={toc:s};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",{alt:"Uploaded files overview",src:n(179).default})),Object(i.b)("h2",{id:"storables"},"Storables"),Object(i.b)("p",null,"Like the models for the database's data, the Symfony Boilerplate provides the ",Object(i.b)("inlineCode",{parentName:"p"},"Storable")," abstract class.\nIt's a wrapper around an upload."),Object(i.b)("p",null,"You have to extend this class with a custom class, usually because of validation."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","See the ",Object(i.b)("a",{parentName:"p",href:"/docs/validation/models"},"Validation")," chapter for more details about validation."))),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"Storable")," abstract class contains useful methods for creating one or more instances according to a source:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"use App\\Domain\\Model\\Storable\\MyStorable;\nuse Psr\\Http\\Message\\UploadedFileInterface;\n\n$storable = MyStorable::createFromUploadedFile(\n    /** @var UploadedFileInterface $upload */\n   $upload\n);\n\n$storables = MyStorable::createAllFromUploadedFiles(\n    /** @var UploadedFileInterface[] $uploads */\n   $uploads\n);\n\n$storable = MyStorable::createFromPath(\n    /** @var string $filePath */\n   $filePath\n);\n\n$storables = MyStorable::createAllFromPaths(\n    /** @var string[] $filePaths */\n   $filePaths\n);\n")),Object(i.b)("h2",{id:"storages"},"Storages"),Object(i.b)("p",null,"Like the DAOs for the models, the Symfony Boilerplate provides the ",Object(i.b)("inlineCode",{parentName:"p"},"PublicStorage")," and ",Object(i.b)("inlineCode",{parentName:"p"},"PrivateStorage"),"\nabstract classes for the storables:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"PublicStorage")," for public files (i.e., files with free access)."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"PrivateStorage")," for private files (i.e., files with access control).")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","Both ",Object(i.b)("inlineCode",{parentName:"p"},"PublicStorage")," and ",Object(i.b)("inlineCode",{parentName:"p"},"PrivateStorage")," abstract classes extend the ",Object(i.b)("inlineCode",{parentName:"p"},"Storage")," abstract class."))),Object(i.b)("p",null,"You have to extend one of these classes with a custom class."),Object(i.b)("p",null,"It must implement the ",Object(i.b)("inlineCode",{parentName:"p"},"getDirectoryName")," method from the ",Object(i.b)("inlineCode",{parentName:"p"},"Storage")," class.\nIn the storage service's bucket, it is the directory's name, which contains the files."),Object(i.b)("p",null,"For instance:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"namespace App\\Domain\\Storage;\n\nfinal class MyStorage extends PrivateStorage\n{\n    protected function getDirectoryName(): string\n    {\n        return 'my_storage';\n    }\n}\n")),Object(i.b)("h3",{id:"write"},"Write"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"// Create the TDBM model instance.\n$foo = new Foo();\n\n// Create the storable from the UploadedFileInterface.\n$storable = MyStorable::createFromUploadedFile(\n    /** @var UploadedFileInterface $upload */\n   $upload\n);\n\n// Write (and validate) the upload to the storage.\n$filename = $this->myStorage->write($storable);\n\n// Save only the filename.\n$foo->setFilename($filename);\n\n// It works the same for multiple uploads.\n$storables = MyStorable::createAllFromUploadedFiles(\n    /** @var UploadedFileInterface[] $uploads */\n   $uploads\n);\n$filenames = $this->myStorage->writeAll($storables);\n$foo->setFilenames($filenames);\n")),Object(i.b)("h3",{id:"delete"},"Delete"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"$filename = $foo->getFilename();\n$this->myStorage->delete($filename);\n\n$filenames = $foo->getFilenames();\n$this->myStorage->deleteAll($filenames);\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","If you have a lot of files to delete, it might be better to do that action asynchronously."))),Object(i.b)("h3",{id:"file-exists"},"File Exists"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"if ($this->myStorage->fileExists('foo.txt')) {\n    // ...\n}\n")),Object(i.b)("h3",{id:"get-file-content"},"Get File Content"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"$filename = $foo->getFilename();\n$fileContent = $this->myStorage->getFileContent($filename);\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","Method ",Object(i.b)("inlineCode",{parentName:"p"},"getFileContent")," should ",Object(i.b)("strong",{parentName:"p"},"only")," be used when accessing a private file."))),Object(i.b)("h2",{id:"public-file-access"},"Public File Access"),Object(i.b)("p",null,"Public files have a public URL."),Object(i.b)("p",null,"In the ",Object(i.b)("inlineCode",{parentName:"p"},"publicRuntimeConfig")," property of your ",Object(i.b)("em",{parentName:"p"},"src/webapp/nuxt.config.js"),", you can\nadd base URLs of your public bucket's directories. "),Object(i.b)("p",null,"For instance:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js",metastring:'title="src/webapp/nuxt.config.js"',title:'"src/webapp/nuxt.config.js"'},"publicRuntimeConfig: {\n  myStorageURL:\n    process.env.PUBLIC_STORAGE_URL +\n    process.env.PUBLIC_MY_STORAGE_DIRECTORY_NAME +\n    '/',\n}\n")),Object(i.b)("p",null,"You may then concatenate the filename to this URL:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js",metastring:'title="Vue component <script> block"',title:'"Vue',component:!0,"<script>":!0,'block"':!0},"this.$config.myStorageURL + this.foo.filename\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html",metastring:'title="Vue component <template> block"',title:'"Vue',component:!0,"<template>":!0,'block"':!0},'<img :src="$config.myStorageURL + foo.filename" />\n')),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","The public URL format might differ according to your storage source."))),Object(i.b)("h2",{id:"private-file-access"},"Private File Access"),Object(i.b)("p",null,"You must create a controller with a Symfony route. "),Object(i.b)("p",null,"This controller may extend the ",Object(i.b)("inlineCode",{parentName:"p"},"DownloadController")," abstract class that provides the following methods:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"// For files you want the browser to download.\nprotected function createResponseWithAttachment(string $filename, string $fileContent): Response;\n\n// For images, etc.\nprotected function createResponseInline(string $filename, string $fileContent): Response;\n")),Object(i.b)("p",null,"For instance:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},'use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/**\n * @Route("/foo/{filename}", methods={"GET"})\n * @Security("is_granted(\'IS_AUTHENTICATED_FULLY\')")\n */\npublic function downloadFooFile(string $filename): Response\n{\n    if (! $this->myStorage->fileExists($filename)) {\n        throw $this->createNotFoundException();\n    }\n\n    $fileContent = $this->myStorage->getFileContent($filename);\n\n    return $this->createResponseInline(\n        $filename,\n        $fileContent\n    );\n}\n')),Object(i.b)("p",null,"On the web application, use the ",Object(i.b)("inlineCode",{parentName:"p"},"$config.apiURL")," and concatenate the Symfony route of your controller."),Object(i.b)("h2",{id:"storage-source"},"Storage Source"),Object(i.b)("p",null,"We use ",Object(i.b)("a",{parentName:"p",href:"https://github.com/thephpleague/flysystem"},"Flysystem")," to abstract the storage service in our source code."),Object(i.b)("p",null,"We configured this package in the ",Object(i.b)("em",{parentName:"p"},"src/api/config/packages/flysystem.yaml")," configuration file."),Object(i.b)("p",null,"In our implementation with ",Object(i.b)("a",{parentName:"p",href:"https://min.io/"},"MinIO"),", we use two buckets (sort of disks with access policies)."),Object(i.b)("p",null,"We create the two buckets thanks to the ",Object(i.b)("inlineCode",{parentName:"p"},"InitializeS3StorageCommand")," class:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash",metastring:'title="console"',title:'"console"'},"php bin/console app:init-storage:s3\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"\ud83d\udce3","\xa0","\xa0","In your development environment, the service ",Object(i.b)("inlineCode",{parentName:"p"},"api")," runs this command automatically on startup."))),Object(i.b)("p",null,"Let's go back to the configuration:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml",metastring:'title="src/api/config/packages/flysystem.yaml"',title:'"src/api/config/packages/flysystem.yaml"'},"public.storage.s3:\n    adapter: 'aws'\n    options:\n        client: 's3.client'\n        bucket: '%env(STORAGE_PUBLIC_BUCKET)%'\n\npublic.storage.memory:\n    adapter: 'memory'\n\npublic.storage:\n    adapter: 'lazy'\n    options:\n        source: '%env(STORAGE_PUBLIC_SOURCE)%'\n")),Object(i.b)("p",null,"The service ",Object(i.b)("inlineCode",{parentName:"p"},"public.storage")," is the generic Symfony service used in our source code.\nThanks to its ",Object(i.b)("inlineCode",{parentName:"p"},"source")," option, we tell the Flysystem package to use either the ",Object(i.b)("inlineCode",{parentName:"p"},"public.storage.s3")," service\n(development, maybe other environments) or ",Object(i.b)("inlineCode",{parentName:"p"},"public.storage.memory")," service (tests)."),Object(i.b)("p",null,"It works the same for private storage."),Object(i.b)("h2",{id:"forms"},"Forms"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html",metastring:'title="Vue component <template> block"',title:'"Vue',component:!0,"<template>":!0,'block"':!0},'<b-form @submit.stop.prevent="onSubmit">\n  <b-form-group\n    id="input-group-file"\n    :label="$t(\'common.file\')"\n    label-for="input-file"\n  >\n    <b-form-file\n      id="input-file"\n      v-model="form.file"\n      :placeholder="$t(\'common.single_file.placeholder\')"\n      :drop-placeholder="$t(\'common.single_file.drop_placeholder\')"\n      :browse-text="$t(\'common.browse\')"\n      :state="formState(\'foo_file\')"\n    ></b-form-file>\n    <div v-if="form.file !== null" class="mt-3">\n      <FilesList :files="[form.file]" />\n    </div>\n    <b-form-invalid-feedback :state="formState(\'foo_file\')">\n      <ErrorsList :errors="formErrors(\'foo_file\')" />\n    </b-form-invalid-feedback>\n  </b-form-group>\n  <b-button\n    type="submit"\n    variant="primary"\n  >\n    {{ $t(\'common.submit\') }}\n  </b-button>\n</b-form>\n')),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js",metastring:'title="Vue component <script> block"',title:'"Vue',component:!0,"<script>":!0,'block"':!0},"import { Form } from '@/mixins/form'\nimport ErrorsList from '@/components/forms/ErrorsList'\nimport FilesList from '@/components/forms/FilesList'\nimport { GlobalOverlay } from '@/mixins/global-overlay'\nimport { UploadFooFile } from '@/graphql/examples/upload_foo_file.mutation'\n\nexport default {\n  components: { FilesList, ErrorsList },\n  mixins: [Form, GlobalOverlay],\n  data() {\n    return {\n      form: {\n        file: null,\n      },\n    }\n  },\n  methods: {\n    async onSubmit() {\n      this.resetFormErrors()\n      this.displayGlobalOverlay()\n\n      try {\n        const result = await this.$graphql.request(\n          UploadFooFile,\n          {\n            file: this.form.file,\n          }\n        )\n\n        // Custom logic on success.\n      } catch (e) {\n        this.hydrateFormErrors(e)\n      } finally {\n        this.hideGlobalOverlay()\n      }\n    },\n  },\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php",metastring:'title="Use case"',title:'"Use','case"':!0},"/**\n * @throws InvalidStorable\n *\n * @Mutation\n */\npublic function uploadFooFile(\n    UploadedFileInterface $file\n): string {\n    $storable = FooFile::createFromUploadedFile($file);\n    $filename = $this->fooFileStorage->write($storable);\n        \n    return $filename;\n}\n")))}p.isMDXComponent=!0}}]);