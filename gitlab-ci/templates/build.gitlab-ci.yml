# DOCKER_BUILDKIT and BUILDKIT_INLINE_CACHE are required to allow layer caching
.build image kaniko:
  variables:
    TARGET: "" # required
    CONTEXT_PATH: "" # required
    IMAGE_DESTINATION: "" # required
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - if [[ -z $TARGET ]]; then echo "TARGET is required"; exit 1; fi
    - if [[ -z $CONTEXT_PATH ]]; then echo "CONTEXT_PATH is required"; exit 1; fi
    - if [[ -z $IMAGE_DESTINATION ]]; then echo "IMAGE_DESTINATION is required"; exit 1; fi
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - '/kaniko/executor
        --reproducible
        --skip-unused-stages
        --snapshot-mode=redo
        --cache=true
        --target="${TARGET}"
        --context="${CONTEXT_PATH}"
        --destination="${IMAGE_DESTINATION}"
       '

# DOCKER_BUILDKIT and BUILDKIT_INLINE_CACHE are required to allow layer caching
.build image buildx:
  variables:
    TARGET: "" # required
    CONTEXT_PATH: "" # required
    IMAGE_DESTINATION: "" # required
    DOCKER_BUILDKIT: 1
  image: docker
  services:
    - name: docker:dind
  before_script:
    - if [[ -z $TARGET ]]; then echo "TARGET is required"; exit 1; fi
    - if [[ -z $CONTEXT_PATH ]]; then echo "CONTEXT_PATH is required"; exit 1; fi
    - if [[ -z $IMAGE_DESTINATION ]]; then echo "IMAGE_DESTINATION is required"; exit 1; fi
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  script:
    - 'docker build
         "${CONTEXT_PATH}"
         --pull
         --cache-from ${IMAGE_DESTINATION}
         --cache-from ${IMAGE_DESTINATION}:latest
         --build-arg BUILDKIT_INLINE_CACHE=1
         -t $IMAGE_DESTINATION
         --target=${TARGET}
      '
    - docker push ${IMAGE_DESTINATION}

.build image:
  extends:
    - '.build image kaniko'

# IMAGE_TAG is required except if script part is overwrited (to allow multiple remove in one task).
.delete image:
  image: curlimages/curl:7.86.0
  variables:
    IMAGE_TAG: "" # Required
    REG_SHA256: ade837fc5224acd8c34732bf54a94f579b47851cc6a7fd5899a98386b782e228
    REG_VERSION: 0.16.1
    GIT_STRATEGY: none
  before_script:
    - curl --fail --show-error --location "https://github.com/genuinetools/reg/releases/download/v$REG_VERSION/reg-linux-amd64" --output ./reg
    - echo "$REG_SHA256  ./reg" | sha256sum -c -
    - chmod a+x ./reg
  script:
    - if [[ -z $IMAGE_TAG ]]; then echo "IMAGE_TAG is required"; exit 1; fi
    - ./reg rm -d --auth-url $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $IMAGE_TAG
